/*
Auto-generated by:
Command: npx gltfjsx@6.5.3 optimized-room.glb 
*/

import React, { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { EffectComposer, SelectiveBloom } from "@react-three/postprocessing";
import { BlendFunction } from "postprocessing";
import * as THREE from "three";

export function Room(props) {
  const robotRef = useRef();
  const screensRef = useRef();

  useFrame((state) => {
    if (robotRef.current) {
      robotRef.current.rotation.y = Math.sin(state.clock.elapsedTime * 0.3) * 0.2;
      robotRef.current.position.y = Math.sin(state.clock.elapsedTime * 0.5) * 0.05;
    }
  });

  return (
    <group {...props} dispose={null}>
      {/* Invisible collision sphere for better OrbitControls interaction */}
      <mesh position={[0, 1, 0]} visible={false}>
        <sphereGeometry args={[3, 16, 16]} />
        <meshBasicMaterial transparent opacity={0} />
      </mesh>

      <EffectComposer>
        <SelectiveBloom
          selection={screensRef}
          intensity={0.3}
          luminanceThreshold={0.2}
          luminanceSmoothing={0.9}
          blendFunction={BlendFunction.ADD}
        />
      </EffectComposer>

      {/* Robot Body */}
      <group ref={robotRef} position={[0, 0, 0]}>
        
        {/* Robot Head */}
        <mesh position={[0, 1.2, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.4, 0.4, 0.4]} />
          <meshStandardMaterial color="#444444" />
        </mesh>
        
        {/* Robot Eyes */}
        <mesh position={[0.1, 1.25, 0.21]} castShadow receiveShadow>
          <sphereGeometry args={[0.05, 16, 16]} />
          <meshStandardMaterial color="#00ff00" emissive="#00ff00" emissiveIntensity={0.5} />
        </mesh>
        <mesh position={[-0.1, 1.25, 0.21]} castShadow receiveShadow>
          <sphereGeometry args={[0.05, 16, 16]} />
          <meshStandardMaterial color="#00ff00" emissive="#00ff00" emissiveIntensity={0.5} />
        </mesh>
        
        {/* Robot Torso */}
        <mesh position={[0, 0.8, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.6, 0.8, 0.3]} />
          <meshStandardMaterial color="#666666" />
        </mesh>
        
        {/* Robot Arms */}
        <mesh position={[0.45, 0.8, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.1, 0.6, 0.1]} />
          <meshStandardMaterial color="#555555" />
        </mesh>
        <mesh position={[-0.45, 0.8, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.1, 0.6, 0.1]} />
          <meshStandardMaterial color="#555555" />
        </mesh>
        
        {/* Robot Hands */}
        <mesh position={[0.5, 0.5, 0]} castShadow receiveShadow>
          <sphereGeometry args={[0.08, 16, 16]} />
          <meshStandardMaterial color="#777777" />
        </mesh>
        <mesh position={[-0.5, 0.5, 0]} castShadow receiveShadow>
          <sphereGeometry args={[0.08, 16, 16]} />
          <meshStandardMaterial color="#777777" />
        </mesh>
        
        {/* Robot Legs */}
        <mesh position={[0.15, 0.2, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.15, 0.4, 0.15]} />
          <meshStandardMaterial color="#555555" />
        </mesh>
        <mesh position={[-0.15, 0.2, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.15, 0.4, 0.15]} />
          <meshStandardMaterial color="#555555" />
        </mesh>
        
        {/* Robot Feet */}
        <mesh position={[0.15, 0, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.2, 0.1, 0.25]} />
          <meshStandardMaterial color="#333333" />
        </mesh>
        <mesh position={[-0.15, 0, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.2, 0.1, 0.25]} />
          <meshStandardMaterial color="#333333" />
        </mesh>
      </group>

      {/* Work Desk */}
      <mesh position={[0, -0.3, 0]} castShadow receiveShadow>
        <boxGeometry args={[3, 0.1, 1.5]} />
        <meshStandardMaterial color="#8B4513" />
      </mesh>

      {/* Computer Setup */}
      <group position={[0.8, 0, 0]}>
        {/* Monitor */}
        <mesh position={[0, 0.3, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.8, 0.6, 0.05]} />
          <meshStandardMaterial color="#2a2a2a" />
        </mesh>
        
        {/* Monitor Stand */}
        <mesh position={[0, 0, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.05, 0.3, 0.05]} />
          <meshStandardMaterial color="#1a1a1a" />
        </mesh>
        
        {/* Screen */}
        <mesh 
          ref={screensRef}
          position={[0, 0.3, 0.03]} 
          castShadow 
          receiveShadow
        >
          <boxGeometry args={[0.75, 0.55, 0.01]} />
          <meshStandardMaterial color="#0066ff" emissive="#0066ff" emissiveIntensity={0.4} />
        </mesh>
        
        {/* Keyboard */}
        <mesh position={[0, -0.1, 0.2]} castShadow receiveShadow>
          <boxGeometry args={[0.6, 0.03, 0.2]} />
          <meshStandardMaterial color="#333333" />
        </mesh>
      </group>

      {/* Floating Holographic Display */}
      <group position={[-0.8, 0.5, 0]}>
        <mesh position={[0, 0, 0]} castShadow receiveShadow>
          <cylinderGeometry args={[0.3, 0.3, 0.02, 32]} />
          <meshStandardMaterial color="#00ffff" emissive="#00ffff" emissiveIntensity={0.3} transparent opacity={0.7} />
        </mesh>
        
        {/* Holographic Data Lines */}
        <mesh position={[0, 0.1, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.5, 0.01, 0.01]} />
          <meshStandardMaterial color="#00ffff" emissive="#00ffff" emissiveIntensity={0.8} />
        </mesh>
        <mesh position={[0, 0.05, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.4, 0.01, 0.01]} />
          <meshStandardMaterial color="#00ffff" emissive="#00ffff" emissiveIntensity={0.6} />
        </mesh>
        <mesh position={[0, 0, 0]} castShadow receiveShadow>
          <boxGeometry args={[0.3, 0.01, 0.01]} />
          <meshStandardMaterial color="#00ffff" emissive="#00ffff" emissiveIntensity={0.4} />
        </mesh>
      </group>

      {/* Floor */}
      <mesh position={[0, -0.5, 0]} castShadow receiveShadow>
        <boxGeometry args={[4, 0.1, 4]} />
        <meshStandardMaterial color="#e0e0e0" />
      </mesh>

      {/* Ceiling */}
      <mesh position={[0, 2.5, 0]} castShadow receiveShadow>
        <boxGeometry args={[4, 0.1, 4]} />
        <meshStandardMaterial color="#f8f8f8" />
      </mesh>
    </group>
  );
}